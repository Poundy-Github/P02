/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *
 *                 This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                 Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                 All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 *  -------------------------------------------------------------------------------------------------------------------
 *  LICENSE
 *  -------------------------------------------------------------------------------------------------------------------
 *            Module: Os
 *           Program: MSR_Vector_SLP4
 *          Customer: Nobo Automotive Systems Co., Ltd.
 *       Expiry Date: Not restricted
 *  Ordered Derivat.: R7F7016513ABG
 *    License Scope : The usage is restricted to CBD2000298_D00
 *
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *              File: Os_Link_Core0_Stacks.ld
 *   Generation Time: 2021-08-24 17:26:33
 *           Project: HUT_V3_5 - Version 1.0
 *          Delivery: CBD2000298_D00
 *      Tool Version: DaVinci Configurator  5.21.32 SP1
 *
 *
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  STACK SECTIONS
 *********************************************************************************************************************/

#if defined ( OS_LINK_KERNEL_STACKS )
_OS_CORE0_STACKS_START = .;
__OS_CORE0_STACKS_START = .;

/* Stack: BSW_COMM (2048 Byte) */
.OS_STACK_BSW_COMM_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_BSW_COMM_VAR_NOINIT_START = ADDR(.OS_STACK_BSW_COMM_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_BSW_COMM_VAR_NOINIT_END = . - 1;
_OS_STACK_BSW_COMM_VAR_NOINIT_LIMIT = .;
__OS_STACK_BSW_COMM_VAR_NOINIT_START = _OS_STACK_BSW_COMM_VAR_NOINIT_START;
__OS_STACK_BSW_COMM_VAR_NOINIT_END = _OS_STACK_BSW_COMM_VAR_NOINIT_END;
__OS_STACK_BSW_COMM_VAR_NOINIT_LIMIT = _OS_STACK_BSW_COMM_VAR_NOINIT_LIMIT;

/* Stack: BSW_DIAGNOSE (2048 Byte) */
.OS_STACK_BSW_DIAGNOSE_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_START = ADDR(.OS_STACK_BSW_DIAGNOSE_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_END = . - 1;
_OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_LIMIT = .;
__OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_START = _OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_START;
__OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_END = _OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_END;
__OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_LIMIT = _OS_STACK_BSW_DIAGNOSE_VAR_NOINIT_LIMIT;

/* Stack: DRIVERS_SAFE (1536 Byte) */
.OS_STACK_DRIVERS_SAFE_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_DRIVERS_SAFE_VAR_NOINIT_START = ADDR(.OS_STACK_DRIVERS_SAFE_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_DRIVERS_SAFE_VAR_NOINIT_END = . - 1;
_OS_STACK_DRIVERS_SAFE_VAR_NOINIT_LIMIT = .;
__OS_STACK_DRIVERS_SAFE_VAR_NOINIT_START = _OS_STACK_DRIVERS_SAFE_VAR_NOINIT_START;
__OS_STACK_DRIVERS_SAFE_VAR_NOINIT_END = _OS_STACK_DRIVERS_SAFE_VAR_NOINIT_END;
__OS_STACK_DRIVERS_SAFE_VAR_NOINIT_LIMIT = _OS_STACK_DRIVERS_SAFE_VAR_NOINIT_LIMIT;

/* Stack: Default_BSW (2048 Byte) */
.OS_STACK_DEFAULT_BSW_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_DEFAULT_BSW_VAR_NOINIT_START = ADDR(.OS_STACK_DEFAULT_BSW_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_DEFAULT_BSW_VAR_NOINIT_END = . - 1;
_OS_STACK_DEFAULT_BSW_VAR_NOINIT_LIMIT = .;
__OS_STACK_DEFAULT_BSW_VAR_NOINIT_START = _OS_STACK_DEFAULT_BSW_VAR_NOINIT_START;
__OS_STACK_DEFAULT_BSW_VAR_NOINIT_END = _OS_STACK_DEFAULT_BSW_VAR_NOINIT_END;
__OS_STACK_DEFAULT_BSW_VAR_NOINIT_LIMIT = _OS_STACK_DEFAULT_BSW_VAR_NOINIT_LIMIT;

/* Stack: FUEL_TC_ODO (2048 Byte) */
.OS_STACK_FUEL_TC_ODO_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_FUEL_TC_ODO_VAR_NOINIT_START = ADDR(.OS_STACK_FUEL_TC_ODO_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_FUEL_TC_ODO_VAR_NOINIT_END = . - 1;
_OS_STACK_FUEL_TC_ODO_VAR_NOINIT_LIMIT = .;
__OS_STACK_FUEL_TC_ODO_VAR_NOINIT_START = _OS_STACK_FUEL_TC_ODO_VAR_NOINIT_START;
__OS_STACK_FUEL_TC_ODO_VAR_NOINIT_END = _OS_STACK_FUEL_TC_ODO_VAR_NOINIT_END;
__OS_STACK_FUEL_TC_ODO_VAR_NOINIT_LIMIT = _OS_STACK_FUEL_TC_ODO_VAR_NOINIT_LIMIT;

/* Stack: GateWay (2048 Byte) */
.OS_STACK_GATEWAY_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_GATEWAY_VAR_NOINIT_START = ADDR(.OS_STACK_GATEWAY_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_GATEWAY_VAR_NOINIT_END = . - 1;
_OS_STACK_GATEWAY_VAR_NOINIT_LIMIT = .;
__OS_STACK_GATEWAY_VAR_NOINIT_START = _OS_STACK_GATEWAY_VAR_NOINIT_START;
__OS_STACK_GATEWAY_VAR_NOINIT_END = _OS_STACK_GATEWAY_VAR_NOINIT_END;
__OS_STACK_GATEWAY_VAR_NOINIT_LIMIT = _OS_STACK_GATEWAY_VAR_NOINIT_LIMIT;

/* Stack: IPC (1536 Byte) */
.OS_STACK_IPC_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_IPC_VAR_NOINIT_START = ADDR(.OS_STACK_IPC_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_IPC_VAR_NOINIT_END = . - 1;
_OS_STACK_IPC_VAR_NOINIT_LIMIT = .;
__OS_STACK_IPC_VAR_NOINIT_START = _OS_STACK_IPC_VAR_NOINIT_START;
__OS_STACK_IPC_VAR_NOINIT_END = _OS_STACK_IPC_VAR_NOINIT_END;
__OS_STACK_IPC_VAR_NOINIT_LIMIT = _OS_STACK_IPC_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Error (1024 Byte) */
.OS_STACK_OSCORE0_ERROR_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_ERROR_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_ERROR_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_ERROR_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_ERROR_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_ERROR_VAR_NOINIT_START = _OS_STACK_OSCORE0_ERROR_VAR_NOINIT_START;
__OS_STACK_OSCORE0_ERROR_VAR_NOINIT_END = _OS_STACK_OSCORE0_ERROR_VAR_NOINIT_END;
__OS_STACK_OSCORE0_ERROR_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_ERROR_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Init (1024 Byte) */
.OS_STACK_OSCORE0_INIT_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_INIT_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_INIT_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_INIT_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_INIT_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_INIT_VAR_NOINIT_START = _OS_STACK_OSCORE0_INIT_VAR_NOINIT_START;
__OS_STACK_OSCORE0_INIT_VAR_NOINIT_END = _OS_STACK_OSCORE0_INIT_VAR_NOINIT_END;
__OS_STACK_OSCORE0_INIT_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_INIT_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Isr_Core (1024 Byte) */
.OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_START = _OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_START;
__OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_END = _OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_END;
__OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_ISR_CORE_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Kernel (1024 Byte) */
.OS_STACK_OSCORE0_KERNEL_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_KERNEL_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_START = _OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_START;
__OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_END = _OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_END;
__OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_KERNEL_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Protection (1024 Byte) */
.OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_START = _OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_START;
__OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_END = _OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_END;
__OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_PROTECTION_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Shutdown (1024 Byte) */
.OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_START = _OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_START;
__OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_END = _OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_END;
__OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_SHUTDOWN_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Task_Prio4294967295 (1024 Byte) */
.OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_START = _OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_START;
__OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_END = _OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_END;
__OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_TASK_PRIO4294967295_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Task_Prio49 (1024 Byte) */
.OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_START = _OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_START;
__OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_END = _OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_END;
__OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_TASK_PRIO49_VAR_NOINIT_LIMIT;

/* Stack: OsCore0_Task_Prio50 (1024 Byte) */
.OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_START = ADDR(.OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_END = . - 1;
_OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_LIMIT = .;
__OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_START = _OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_START;
__OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_END = _OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_END;
__OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_LIMIT = _OS_STACK_OSCORE0_TASK_PRIO50_VAR_NOINIT_LIMIT;

/* Stack: SWC_LOW (1024 Byte) */
.OS_STACK_SWC_LOW_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_SWC_LOW_VAR_NOINIT_START = ADDR(.OS_STACK_SWC_LOW_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_SWC_LOW_VAR_NOINIT_END = . - 1;
_OS_STACK_SWC_LOW_VAR_NOINIT_LIMIT = .;
__OS_STACK_SWC_LOW_VAR_NOINIT_START = _OS_STACK_SWC_LOW_VAR_NOINIT_START;
__OS_STACK_SWC_LOW_VAR_NOINIT_END = _OS_STACK_SWC_LOW_VAR_NOINIT_END;
__OS_STACK_SWC_LOW_VAR_NOINIT_LIMIT = _OS_STACK_SWC_LOW_VAR_NOINIT_LIMIT;

/* Stack: SYS (2048 Byte) */
.OS_STACK_SYS_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_SYS_VAR_NOINIT_START = ADDR(.OS_STACK_SYS_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_SYS_VAR_NOINIT_END = . - 1;
_OS_STACK_SYS_VAR_NOINIT_LIMIT = .;
__OS_STACK_SYS_VAR_NOINIT_START = _OS_STACK_SYS_VAR_NOINIT_START;
__OS_STACK_SYS_VAR_NOINIT_END = _OS_STACK_SYS_VAR_NOINIT_END;
__OS_STACK_SYS_VAR_NOINIT_LIMIT = _OS_STACK_SYS_VAR_NOINIT_LIMIT;

/* Stack: TT_GEAR (1536 Byte) */
.OS_STACK_TT_GEAR_VAR_NOINIT ALIGN(4) :> .
_OS_STACK_TT_GEAR_VAR_NOINIT_START = ADDR(.OS_STACK_TT_GEAR_VAR_NOINIT);
. = ALIGN(4);
_OS_STACK_TT_GEAR_VAR_NOINIT_END = . - 1;
_OS_STACK_TT_GEAR_VAR_NOINIT_LIMIT = .;
__OS_STACK_TT_GEAR_VAR_NOINIT_START = _OS_STACK_TT_GEAR_VAR_NOINIT_START;
__OS_STACK_TT_GEAR_VAR_NOINIT_END = _OS_STACK_TT_GEAR_VAR_NOINIT_END;
__OS_STACK_TT_GEAR_VAR_NOINIT_LIMIT = _OS_STACK_TT_GEAR_VAR_NOINIT_LIMIT;

_OS_CORE0_STACKS_END = . - 1;
__OS_CORE0_STACKS_END = . - 1;
_OS_CORE0_STACKS_LIMIT = .;
__OS_CORE0_STACKS_LIMIT = .;
_OS_CORE0_STACKS_END_ALIAS = (_OS_CORE0_STACKS_END & ~ 0xF0000000) | 0xD0000000;
_OS_CORE0_STACKS_LIMIT_ALIAS = (_OS_CORE0_STACKS_LIMIT & ~ 0xF0000000) | 0xD0000000;
#endif

#ifdef OS_LINK_KERNEL_STACKS
# undef OS_LINK_KERNEL_STACKS
#endif


