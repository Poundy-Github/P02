---------------------------------------------------------------------------------
-- Project      = G3M/G3KH SW CST                                              --
-- Module       = FPU_cvt_ope.850                                              --
-- Version      = 1.2.4                                                        --
-- Date         = 10-11-2017                                                   --
---------------------------------------------------------------------------------
--                                  COPYRIGHT                                  --
---------------------------------------------------------------------------------
-- Copyright (c) 2014-2017 by Renesas Electronics Corporation                  --
---------------------------------------------------------------------------------
-- Purpose:                                                                    --
--   RH850G3M/RH850G3KH CORE SELF TEST                                         --
--   Test of Floating Point Arithmetic Instructions (Convert)                  --
---------------------------------------------------------------------------------
--                                                                             --
-- Unless otherwise agreed upon in writing between your company and            --
-- Renesas Electronics Corporation the following shall apply!                  --
--                                                                             --
-- Warranty Disclaimer                                                         --
--                                                                             --
-- There is no warranty of any kind whatsoever granted by Renesas. Any         --
-- warranty is expressly disclaimed and excluded by Renesas, either expressed  --
-- or implied, including but not limited to those for non-infringement of      --
-- intellectual property, merchantability and/or fitness for the particular    --
-- purpose.                                                                    --
--                                                                             --
-- Renesas shall not have any obligation to maintain, service or provide bug   --
-- fixes for the supplied Product(s) and/or the Application.                   --
--                                                                             --
-- Each User is solely responsible for determining the appropriateness of      --
-- using the Product(s) and assumes all risks associated with its exercise     --
-- of rights under this Agreement, including, but not limited to the risks     --
-- and costs of program errors, compliance with applicable laws, damage to     --
-- or loss of data, programs or equipment, and unavailability or               --
-- interruption of operations.                                                 --
--                                                                             --
-- Limitation of Liability                                                     --
--                                                                             --
-- In no event shall Renesas be liable to the User for any incidental,         --
-- consequential, indirect, or punitive damage (including but not limited      --
-- to lost profits) regardless of whether such liability is based on breach    --
-- of contract, tort, strict liability, breach of warranties, failure of       --
-- essential purpose or otherwise and even if advised of the possibility of    --
-- such damages. Renesas shall not be liable for any services or products      --
-- provided by third party vendors, developers or consultants identified or    --
-- referred to the User by Renesas in connection with the Product(s) and/or    --
-- the Application.                                                            --
--                                                                             --
---------------------------------------------------------------------------------
-- Environment:                                                                --
--              Devices:  G3M/G3KH                                             --
--              Language: Green Hills Software, Compiler v2015.1.7             --
---------------------------------------------------------------------------------

#include        "CST_common.inc"
#include        "CST_if.h"

------------------------------------------------------------------------------
--	Defined Symbol
------------------------------------------------------------------------------
	.GLOBL		_CST_FPU_cvt_1
	.GLOBL		_CST_FPU_cvt_2
	.GLOBL		_CST_FPU_cvt_3

------------------------------------------------------------------------------
--	External Reference
------------------------------------------------------------------------------
	.EXTERN		f_sub_SRU_fpu_set
	.EXTERN		f_sub_SRU_fpu_restore
	.EXTERN		f_sub_FPU_fpst_load_VOUI
	.EXTERN		f_sub_FPU_fpst_load_VI
	.EXTERN		f_sub_FPU_fpst_load_I
	.EXTERN		f_sub_FPU_fpst_load_V

	.EXTERN		FPU_cvt_tbl_1
#if CST_FPU_SUPPORT_DOUBLE
	.EXTERN		FPU_cvt_tbl_2
-- CST_FPU_SUPPORT_DOUBLE
#else
	.EXTERN		FPU_cvt_tbl_3
	.EXTERN		FPU_cvt_tbl_4
-- CST_FPU_SUPPORT_DOUBLE
#endif

------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_cvt_1
--  Function ID     : CST_FN_066
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R8, R9, R10, R11, R12, R13, R14, (EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_cvt_1:
	-- Covers: CST_DD_082
	-- Covers: CST_DD_313
	-- Covers: CST_DD_227
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R29-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

#if CST_FPU_SUPPORT_DOUBLE

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cvt_tbl_1, EP		--
	MOV		0x04, R11			--

    FPU_cvt_1_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--

	-- Covers: CST_UM_357
	-- Covers: CST_UM_357_01
	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_354
	-- Covers: CST_UM_354_01
	--------------------------------------------------
	--	CVTF.LD reg2, reg3
	--------------------------------------------------
	CVTF.LD		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	-- Covers: CST_UM_361
	-- Covers: CST_UM_361_01
	--------------------------------------------------
	--	CVTF.SW reg2, reg3
	--------------------------------------------------
	CVTF.SW		R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_366
	-- Covers: CST_UM_366_01
	--------------------------------------------------
	--	CVTF.WD reg2, reg3
	--------------------------------------------------
	CVTF.WD		R8, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

	-- Covers: CST_UM_359
	-- Covers: CST_UM_359_01
 	--------------------------------------------------
	--	CVTF.SUL reg2, reg3
	--------------------------------------------------
	CVTF.SUL	R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_362
	-- Covers: CST_UM_362_01
	--------------------------------------------------
	--	CVTF.ULD reg2, reg3
	--------------------------------------------------
	CVTF.ULD	R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	-- Covers: CST_UM_360
	-- Covers: CST_UM_360_01
	--------------------------------------------------
	--	CVTF.SUW reg2, reg3
	--------------------------------------------------
	CVTF.SUW	R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_364
	-- Covers: CST_UM_364_01
	--------------------------------------------------
	--	CVTF.UWD reg2, reg3
	--------------------------------------------------
	CVTF.UWD	R8, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

	-- Covers: CST_UM_349
	-- Covers: CST_UM_349_01
	--------------------------------------------------
	--	CVTF.DS reg2, reg3
	--------------------------------------------------
	CVTF.DS		R12, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	-- Covers: CST_UM_356
	-- Covers: CST_UM_356_01
	--------------------------------------------------
	--	CVTF.SD reg2, reg3
	--------------------------------------------------
	CVTF.SD		R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_352
	-- Covers: CST_UM_352_01
	--------------------------------------------------
	--	CVTF.DW reg2, reg3
	--------------------------------------------------
	CVTF.DW		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	-- Covers: CST_UM_367
	-- Covers: CST_UM_367_01
	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R12, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R8, R10				--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADD		0x04, EP			--
	LOOP		R11, FPU_cvt_1_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--
	MOV		0xA55A3CC3, R8			--
	MOV		0x5AA5C33C, R9			--

	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.LD reg2, reg3
	--------------------------------------------------
	CVTF.LD		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.LD		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.SW reg2, reg3
	--------------------------------------------------
	CVTF.SW		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.SW		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.WD reg2, reg3
	--------------------------------------------------
	CVTF.WD		R6, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.WD		R8, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

 	--------------------------------------------------
	--	CVTF.SUL reg2, reg3
	--------------------------------------------------
	CVTF.SUL	R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SUL	R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.ULD reg2, reg3
	--------------------------------------------------
	CVTF.ULD	R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.ULD	R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg

	--------------------------------------------------
	--	CVTF.SUW reg2, reg3
	--------------------------------------------------
	CVTF.SUW	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.SUW	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.UWD reg2, reg3
	--------------------------------------------------
	CVTF.UWD	R6, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.UWD	R8, R12				--cst_point: out=3
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.DS reg2, reg3
	--------------------------------------------------
	CVTF.DS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.SD reg2, reg3
	--------------------------------------------------
	CVTF.SD		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SD		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.DW reg2, reg3
	--------------------------------------------------
	CVTF.DW		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.DW		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--


-- CST_FPU_SUPPORT_DOUBLE
#else

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cvt_tbl_3, EP		--
	MOV		0x04, R11			--

    FPU_cvt_1_001:
	-- Covers: CST_UM_357
	-- Covers: CST_UM_357_01
	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	SLD.W		0x00[EP], R6			-- Set of Test Pattern Data

	CVTF.SL		R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_361
	-- Covers: CST_UM_361_01
	--------------------------------------------------
	--	CVTF.SW reg2, reg3
	--------------------------------------------------
	CVTF.SW		R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_359
	-- Covers: CST_UM_359_01
	--------------------------------------------------
	--	CVTF.SUL reg2, reg3
	--------------------------------------------------
	CVTF.SUL	R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_360
	-- Covers: CST_UM_360_01
	--------------------------------------------------
	--	CVTF.SUW reg2, reg3
	--------------------------------------------------
	CVTF.SUW	R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_367
	-- Covers: CST_UM_367_01
	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	SLD.W		0x04[EP], R12			-- Set of Test Pattern Data

	CVTF.WS		R12, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R8, R10				--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADD		0x08, EP			--
	LOOP		R11, FPU_cvt_1_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R8			--

	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.SW reg2, reg3
	--------------------------------------------------
	CVTF.SW		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.SW		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

 	--------------------------------------------------
	--	CVTF.SUL reg2, reg3
	--------------------------------------------------
	CVTF.SUL	R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SUL	R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.SUW reg2, reg3
	--------------------------------------------------
	CVTF.SUW	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.SUW	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

-- CST_FPU_SUPPORT_DOUBLE
#endif

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R29-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_cvt_2
--  Function ID     : CST_FN_067
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R7, R8, R9, R10, R11, R12, R13, (EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_cvt_2:
	-- Covers: CST_DD_083
	-- Covers: CST_DD_314
	-- Covers: CST_DD_228
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R29-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

#if CST_FPU_SUPPORT_DOUBLE

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cvt_tbl_2, EP		--
	MOV		0x04, R11			--

    FPU_cvt_2_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--

	-- Covers: CST_UM_348
	-- Covers: CST_UM_348_01
	--------------------------------------------------
	--	CVTF.DL reg2, reg3
	--------------------------------------------------
	CVTF.DL		R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_355
	-- Covers: CST_UM_355_01
	--------------------------------------------------
	--	CVTF.LS reg2, reg3
	--------------------------------------------------
	CVTF.LS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_352
	-- Covers: CST_UM_352_01
	--------------------------------------------------
	--	CVTF.DW reg2, reg3
	--------------------------------------------------
	CVTF.DW		R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_367
	-- Covers: CST_UM_367_01
	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_350
	-- Covers: CST_UM_350_01
	--------------------------------------------------
	--	CVTF.DUL reg2, reg3
	--------------------------------------------------
	CVTF.DUL	R6, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_363
	-- Covers: CST_UM_363_01
	--------------------------------------------------
	--	CVTF.ULS reg2, reg3
	--------------------------------------------------
	CVTF.ULS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_351
	-- Covers: CST_UM_351_01
	--------------------------------------------------
	--	CVTF.DUW reg2, reg3
	--------------------------------------------------
	CVTF.DUW	R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--

	-- Covers: CST_UM_365
	-- Covers: CST_UM_365_01
	--------------------------------------------------
	--	CVTF.UWS reg2, reg3
	--------------------------------------------------
	CVTF.UWS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_356
	-- Covers: CST_UM_356_01
	--------------------------------------------------
	--	CVTF.SD reg2, reg3
	--------------------------------------------------
	CVTF.SD		R12, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R8, R10				--
	ADD		R9, R10				--

	-- Covers: CST_UM_349
	-- Covers: CST_UM_349_01
	--------------------------------------------------
	--	CVTF.DS reg2, reg3
	--------------------------------------------------
	CVTF.DS		R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	-- Covers: CST_UM_357
	-- Covers: CST_UM_357_01
	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	-- Covers: CST_UM_354
	-- Covers: CST_UM_354_01
	--------------------------------------------------
	--	CVTF.LD reg2, reg3
	--------------------------------------------------
	CVTF.LD		R12, R8				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R8, R10				--
	ADD		R9, R10				--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADD		0x08, EP			--
	LOOP		R11, FPU_cvt_2_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--
	MOV		0xA55A3CC3, R8			--
	MOV		0x5AA5C33C, R9			--

	--------------------------------------------------
	--	CVTF.DL reg2, reg3
	--------------------------------------------------
	CVTF.DL		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.DL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.LS reg2, reg3
	--------------------------------------------------
	CVTF.LS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.LS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.DW reg2, reg3
	--------------------------------------------------
	CVTF.DW		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.DW		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.DUL reg2, reg3
	--------------------------------------------------
	CVTF.DUL	R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.DUL	R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.ULS reg2, reg3
	--------------------------------------------------
	CVTF.ULS	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.ULS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg

	--------------------------------------------------
	--	CVTF.DUW reg2, reg3
	--------------------------------------------------
	CVTF.DUW	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	CVTF.DUW	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.UWS reg2, reg3
	--------------------------------------------------
	CVTF.UWS	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.UWS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.SD reg2, reg3
	--------------------------------------------------
	CVTF.SD		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SD		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.DS reg2, reg3
	--------------------------------------------------
	CVTF.DS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	CVTF.LD reg2, reg3
	--------------------------------------------------
	CVTF.LD		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.LD		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--
	ADD		R13, R10			--

-- CST_FPU_SUPPORT_DOUBLE
#else

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cvt_tbl_4, EP		--
	MOV		0x04, R11			--

    FPU_cvt_2_001:
	-- Covers: CST_UM_355
	-- Covers: CST_UM_355_01
	--------------------------------------------------
	--	CVTF.LS reg2, reg3
	--------------------------------------------------
	SLD.W		0x00[EP], R8			-- Set of Test Pattern Data
	SLD.W		0x04[EP], R9			--

	CVTF.LS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_367
	-- Covers: CST_UM_367_01
	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	SLD.W		0x08[EP], R8			-- Set of Test Pattern Data

	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_363
	-- Covers: CST_UM_363_01
	--------------------------------------------------
	--	CVTF.ULS reg2, reg3
	--------------------------------------------------
	SLD.W		0x0C[EP], R8			-- Set of Test Pattern Data
	SLD.W		0x10[EP], R9			--

	CVTF.ULS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_365
	-- Covers: CST_UM_365_01
	--------------------------------------------------
	--	CVTF.UWS reg2, reg3
	--------------------------------------------------
	SLD.W		0x14[EP], R8			-- Set of Test Pattern Data

	CVTF.UWS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	-- Covers: CST_UM_357
	-- Covers: CST_UM_357_01
	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	SLD.W		0x18[EP], R8			-- Set of Test Pattern Data

	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADDI		0x1C, EP, EP			--
	LOOP		R11, FPU_cvt_2_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--
	MOV		0xA55A3CC3, R8			--
	MOV		0x5AA5C33C, R9			--

	--------------------------------------------------
	--	CVTF.LS reg2, reg3
	--------------------------------------------------
	CVTF.LS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.LS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.WS reg2, reg3
	--------------------------------------------------
	CVTF.WS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.WS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.ULS reg2, reg3
	--------------------------------------------------
	CVTF.ULS	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.ULS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.UWS reg2, reg3
	--------------------------------------------------
	CVTF.UWS	R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	CVTF.UWS	R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_I, LP	--cst_point: fexp=I
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.SL reg2, reg3
	--------------------------------------------------
	CVTF.SL		R6, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

	CVTF.SL		R8, R12				--cst_point: out=3
	JARL		f_sub_FPU_fpst_load_VI, LP	--cst_point: fexp=VI
	ADD		R12, R10			--
	ADD		R13, R10			--

-- CST_FPU_SUPPORT_DOUBLE
#endif

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R29-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_cvt_3
--  Function ID     : CST_FN_068
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R7, R8, R10, R11, R12, (EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_cvt_3:
	-- Covers: CST_DD_084
	-- Covers: CST_DD_312
	-- Covers: CST_DD_229
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R29-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cvt_tbl_1, EP		--
	MOV		0x04, R11			--

    FPU_cvt_3_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--

	-- Covers: CST_UM_358
	-- Covers: CST_UM_358_01
	--------------------------------------------------
	--	CVTF.SH reg2, reg3
	--------------------------------------------------
	CVTF.SH		R6, R8				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	-- Covers: CST_UM_353
	-- Covers: CST_UM_353_01
	--------------------------------------------------
	--	CVTF.HS reg2, reg3
	--------------------------------------------------
	CVTF.HS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_V, LP	--cst_point: fexp=V
	ADD		R12, R10			--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADD		0x04, EP			--
	LOOP		R11, FPU_cvt_3_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0x3CC3A55A, R7			--
	MOV		0xA55A3CC3, R8			--

	--------------------------------------------------
	--	CVTF.SH reg2, reg3
	--------------------------------------------------
	CVTF.SH		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	CVTF.SH		R7, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	--------------------------------------------------
	--	CVTF.HS reg2, reg3
	--------------------------------------------------
	CVTF.HS		R6, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_V, LP	--cst_point: fexp=V
	ADD		R12, R10			--

	CVTF.HS		R8, R12				--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_V, LP	--cst_point: fexp=V
	ADD		R12, R10			--

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R29-LP}, [LP]		--


-- ============================================================================
-- =====        E n d   o f   F i l e   :   FPU_cvt_ope.850               =====
-- ============================================================================
