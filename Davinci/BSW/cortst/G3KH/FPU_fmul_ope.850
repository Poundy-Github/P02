---------------------------------------------------------------------------------
-- Project      = G3M/G3KH SW CST                                              --
-- Module       = FPU_fmul_ope.850                                             --
-- Version      = 1.2.4                                                        --
-- Date         = 10-11-2017                                                   --
---------------------------------------------------------------------------------
--                                  COPYRIGHT                                  --
---------------------------------------------------------------------------------
-- Copyright (c) 2014-2017 by Renesas Electronics Corporation                  --
---------------------------------------------------------------------------------
-- Purpose:                                                                    --
--   RH850G3M/RH850G3KH CORE SELF TEST                                         --
--   Test of Floating Point Arithmetic Instructions (Fused-Multiply)           --
---------------------------------------------------------------------------------
--                                                                             --
-- Unless otherwise agreed upon in writing between your company and            --
-- Renesas Electronics Corporation the following shall apply!                  --
--                                                                             --
-- Warranty Disclaimer                                                         --
--                                                                             --
-- There is no warranty of any kind whatsoever granted by Renesas. Any         --
-- warranty is expressly disclaimed and excluded by Renesas, either expressed  --
-- or implied, including but not limited to those for non-infringement of      --
-- intellectual property, merchantability and/or fitness for the particular    --
-- purpose.                                                                    --
--                                                                             --
-- Renesas shall not have any obligation to maintain, service or provide bug   --
-- fixes for the supplied Product(s) and/or the Application.                   --
--                                                                             --
-- Each User is solely responsible for determining the appropriateness of      --
-- using the Product(s) and assumes all risks associated with its exercise     --
-- of rights under this Agreement, including, but not limited to the risks     --
-- and costs of program errors, compliance with applicable laws, damage to     --
-- or loss of data, programs or equipment, and unavailability or               --
-- interruption of operations.                                                 --
--                                                                             --
-- Limitation of Liability                                                     --
--                                                                             --
-- In no event shall Renesas be liable to the User for any incidental,         --
-- consequential, indirect, or punitive damage (including but not limited      --
-- to lost profits) regardless of whether such liability is based on breach    --
-- of contract, tort, strict liability, breach of warranties, failure of       --
-- essential purpose or otherwise and even if advised of the possibility of    --
-- such damages. Renesas shall not be liable for any services or products      --
-- provided by third party vendors, developers or consultants identified or    --
-- referred to the User by Renesas in connection with the Product(s) and/or    --
-- the Application.                                                            --
--                                                                             --
---------------------------------------------------------------------------------
-- Environment:                                                                --
--              Devices:  G3M/G3KH                                             --
--              Language: Green Hills Software, Compiler v2015.1.7             --
---------------------------------------------------------------------------------

#include        "CST_common.inc"
#include        "CST_if.h"

-------------------------------------------------------------------------------
--	Defined Symbol
-------------------------------------------------------------------------------
	.GLOBL		_CST_FPU_fmul_1
	.GLOBL		_CST_FPU_fmul_2
	.GLOBL		_CST_FPU_fmul_3
	.GLOBL		_CST_FPU_fmul_4

-------------------------------------------------------------------------------
--	External Reference
-------------------------------------------------------------------------------
	.EXTERN		f_sub_SRU_fpu_set
	.EXTERN		f_sub_SRU_fpu_restore
	.EXTERN		f_sub_FPU_fpst_load_VOUI

	.EXTERN		FPU_fmul_tbl_1
	.EXTERN		FPU_fmul_tbl_2

------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_fmul_1
--  Function ID     : CST_FN_069
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R1, R6, R7, R8, R9, R10, R11, R12, R13, (R27, R28, EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_fmul_1:
	-- Covers: CST_DD_085
	-- Covers: CST_DD_315
	-- Covers: CST_DD_316
	-- Covers: CST_DD_230
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R27-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_fmul_tbl_1, EP		--
	MOVEA		0x0011, R0, R13			--

    FPU_fmul_1_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--

	MOV		FPU_fmul_tbl_2, R27		--
	MOV		0x04, R28			--

    FPU_fmul_1_002:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	LD.W		0x0000[R27], R8			--
	MOV		R8, R9				--
	MOV		R8, R11				--
	MOV		R8, R12				--

	-- Covers: CST_UM_378
	-- Covers: CST_UM_378_01
	--------------------------------------------------
	--	FMAF.S  reg1, reg2, reg3
	--------------------------------------------------
	FMAF.S		R6, R7, R8			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	--------------------------------------------------
	--	Judge of internal loop
	--------------------------------------------------
	ADD		0x08, R27			--
	LOOP		R28, FPU_fmul_1_002		--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOVEA		0x0010, R0, R1			--
	CMP		R1, R13				--
	BZ		FPU_fmul_1_003			--
	CMP		0x0E, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x0C, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x0A, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x08, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x06, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x04, R13			--
	BZ		FPU_fmul_1_003			--
	CMP		0x02, R13			--
	BNZ		FPU_fmul_1_004			--
    FPU_fmul_1_003:
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--
    FPU_fmul_1_004:


	--------------------------------------------------
	--	Judge of external loop
	--------------------------------------------------
	ADDI		0x0010, EP, EP			--
	LOOP		R13, FPU_fmul_1_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--

	--------------------------------------------------
	--	FMAF.S  reg1, reg2, reg3
	--------------------------------------------------
	MOV		0x55555555, R8			--
	FMAF.S		R6, R7, R8			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	MOV		0x55555555, R8			--
	FMAF.S		R7, R6, R8			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R8, R10				--

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R27-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_fmul_2
--  Function ID     : CST_FN_070
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R1, R6, R7, R8, R9, R10, R11, R12, R13, (R27, R28, EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_fmul_2:
	-- Covers: CST_DD_086
	-- Covers: CST_DD_315
	-- Covers: CST_DD_231
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R27-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_fmul_tbl_1, EP		--
	MOVEA		0x0011, R0, R13			--

    FPU_fmul_2_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--

	MOV		(FPU_fmul_tbl_2 + 4), R27	--
	MOV		0x04, R28			--

    FPU_fmul_2_002:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	LD.W		0x0000[R27], R8			--
	MOV		R8, R9				--
	MOV		R8, R11				--
	MOV		R8, R12				--

	-- Covers: CST_UM_379
	-- Covers: CST_UM_379_01
	--------------------------------------------------
	--	FMSF.S  reg1, reg2, reg3
	--------------------------------------------------
	FMSF.S		R6, R7, R9			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R9, R10				--

	--------------------------------------------------
	--	Judge of internal loop
	--------------------------------------------------
	ADD		0x08, R27			--
	LOOP		R28, FPU_fmul_2_002		--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOVEA		0x0010, R0, R1			--
	CMP		R1, R13				--
	BZ		FPU_fmul_2_003			--
	CMP		0x0E, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x0C, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x0A, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x08, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x06, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x04, R13			--
	BZ		FPU_fmul_2_003			--
	CMP		0x02, R13			--
	BNZ		FPU_fmul_2_004			--
    FPU_fmul_2_003:
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--
    FPU_fmul_2_004:


	--------------------------------------------------
	--	Judge of external loop
	--------------------------------------------------
	ADDI		0x0010, EP, EP			--
	LOOP		R13, FPU_fmul_2_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--

	--------------------------------------------------
	--	FMSF.S  reg1, reg2, reg3
	--------------------------------------------------
	MOV		0x55555555, R9			--
	FMSF.S		R6, R7, R9			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R9, R10				--

	MOV		0x55555555, R9			--
	FMSF.S		R7, R6, R9			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R9, R10				--

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R27-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_fmul_3
--  Function ID     : CST_FN_071
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R1, R6, R7, R8, R9, R10, R11, R12, R13, (R27, R28, EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_fmul_3:
	-- Covers: CST_DD_087
	-- Covers: CST_DD_315
	-- Covers: CST_DD_232
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R27-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		(FPU_fmul_tbl_1 + 8), EP	--
	MOVEA		0x0011, R0, R13			--

    FPU_fmul_3_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--

	MOV		FPU_fmul_tbl_2, R27		--
	MOV		0x04, R28			--

    FPU_fmul_3_002:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	LD.W		0x0000[R27], R8			--
	MOV		R8, R9				--
	MOV		R8, R11				--
	MOV		R8, R12				--

	-- Covers: CST_UM_380
	-- Covers: CST_UM_380_01
	--------------------------------------------------
	--	FNMAF.S  reg1, reg2, reg3
	--------------------------------------------------
	FNMAF.S		R6, R7, R11			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R11, R10			--

	--------------------------------------------------
	--	Judge of internal loop
	--------------------------------------------------
	ADD		0x08, R27			--
	LOOP		R28, FPU_fmul_3_002		--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOVEA		0x0010, R0, R1			--
	CMP		R1, R13				--
	BZ		FPU_fmul_3_003			--
	CMP		0x0E, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x0C, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x0A, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x08, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x06, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x04, R13			--
	BZ		FPU_fmul_3_003			--
	CMP		0x02, R13			--
	BNZ		FPU_fmul_3_004			--
    FPU_fmul_3_003:
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--
    FPU_fmul_3_004:


	--------------------------------------------------
	--	Judge of external loop
	--------------------------------------------------
	ADDI		0x0010, EP, EP			--
	LOOP		R13, FPU_fmul_3_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--

	--------------------------------------------------
	--	FNMAF.S  reg1, reg2, reg3
	--------------------------------------------------
	MOV		0x55555555, R11			--
	FNMAF.S		R6, R7, R11			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R11, R10			--

	MOV		0x55555555, R11			--
	FNMAF.S		R7, R6, R11			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R11, R10			--

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R27-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_fmul_4
--  Function ID     : CST_FN_072
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R1, R6, R7, R8, R9, R10, R11, R12, R13, (R27, R28, EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_fmul_4:
	-- Covers: CST_DD_088
	-- Covers: CST_DD_315
	-- Covers: CST_DD_233
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R27-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		(FPU_fmul_tbl_1 + 8), EP	--
	MOVEA		0x0011, R0, R13			--

    FPU_fmul_4_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--

	MOV		(FPU_fmul_tbl_2 + 4), R27	--
	MOV		0x04, R28			--

    FPU_fmul_4_002:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	LD.W		0x0000[R27], R8			--
	MOV		R8, R9				--
	MOV		R8, R11				--
	MOV		R8, R12				--

	-- Covers: CST_UM_381
	-- Covers: CST_UM_381_01
	--------------------------------------------------
	--	FNMSF.S  reg1, reg2, reg3
	--------------------------------------------------
	FNMSF.S		R6, R7, R12			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	--------------------------------------------------
	--	Judge of internal loop
	--------------------------------------------------
	ADD		0x08, R27			--
	LOOP		R28, FPU_fmul_4_002		--

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOVEA		0x0010, R0, R1			--
	CMP		R1, R13				--
	BZ		FPU_fmul_4_003			--
	CMP		0x0E, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x0C, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x0A, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x08, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x06, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x04, R13			--
	BZ		FPU_fmul_4_003			--
	CMP		0x02, R13			--
	BNZ		FPU_fmul_4_004			--
    FPU_fmul_4_003:
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--
    FPU_fmul_4_004:

	--------------------------------------------------
	--	Judge of external loop
	--------------------------------------------------
	ADDI		0x0010, EP, EP			--
	LOOP		R13, FPU_fmul_4_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--

	--------------------------------------------------
	--	FNMSF.S  reg1, reg2, reg3
	--------------------------------------------------
	MOV		0x55555555, R12			--
	FNMSF.S		R6, R7, R12			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	MOV		0x55555555, R12			--
	FNMSF.S		R7, R6, R12			--cst_point: out=1
	JARL		f_sub_FPU_fpst_load_VOUI, LP	--cst_point: fexp=VOUI
	ADD		R12, R10			--

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R27-LP}, [LP]		--


-- ============================================================================
-- =====        E n d   o f   F i l e   :   FPU_fmul_ope.850              =====
-- ============================================================================
