---------------------------------------------------------------------------------
-- Project      = G3M/G3KH SW CST                                              --
-- Module       = FPU_cmp_ope.850                                              --
-- Version      = 1.2.4                                                        --
-- Date         = 10-11-2017                                                   --
---------------------------------------------------------------------------------
--                                  COPYRIGHT                                  --
---------------------------------------------------------------------------------
-- Copyright (c) 2014-2017 by Renesas Electronics Corporation                  --
---------------------------------------------------------------------------------
-- Purpose:                                                                    --
--   RH850G3M/RH850G3KH CORE SELF TEST                                         --
--   Test of Floating Point Arithmetic Instructions (Compare)                  --
---------------------------------------------------------------------------------
--                                                                             --
-- Unless otherwise agreed upon in writing between your company and            --
-- Renesas Electronics Corporation the following shall apply!                  --
--                                                                             --
-- Warranty Disclaimer                                                         --
--                                                                             --
-- There is no warranty of any kind whatsoever granted by Renesas. Any         --
-- warranty is expressly disclaimed and excluded by Renesas, either expressed  --
-- or implied, including but not limited to those for non-infringement of      --
-- intellectual property, merchantability and/or fitness for the particular    --
-- purpose.                                                                    --
--                                                                             --
-- Renesas shall not have any obligation to maintain, service or provide bug   --
-- fixes for the supplied Product(s) and/or the Application.                   --
--                                                                             --
-- Each User is solely responsible for determining the appropriateness of      --
-- using the Product(s) and assumes all risks associated with its exercise     --
-- of rights under this Agreement, including, but not limited to the risks     --
-- and costs of program errors, compliance with applicable laws, damage to     --
-- or loss of data, programs or equipment, and unavailability or               --
-- interruption of operations.                                                 --
--                                                                             --
-- Limitation of Liability                                                     --
--                                                                             --
-- In no event shall Renesas be liable to the User for any incidental,         --
-- consequential, indirect, or punitive damage (including but not limited      --
-- to lost profits) regardless of whether such liability is based on breach    --
-- of contract, tort, strict liability, breach of warranties, failure of       --
-- essential purpose or otherwise and even if advised of the possibility of    --
-- such damages. Renesas shall not be liable for any services or products      --
-- provided by third party vendors, developers or consultants identified or    --
-- referred to the User by Renesas in connection with the Product(s) and/or    --
-- the Application.                                                            --
--                                                                             --
---------------------------------------------------------------------------------
-- Environment:                                                                --
--              Devices:  G3M/G3KH                                             --
--              Language: Green Hills Software, Compiler v2015.1.7             --
---------------------------------------------------------------------------------

#include        "CST_common.inc"
#include        "CST_if.h"

------------------------------------------------------------------------------
--	Defined Symbol
------------------------------------------------------------------------------
	.GLOBL		_CST_FPU_cmp_1
#if CST_FPU_SUPPORT_DOUBLE
	.GLOBL		_CST_FPU_cmp_2
-- CST_FPU_SUPPORT_DOUBLE
#endif

------------------------------------------------------------------------------
--	External Reference
------------------------------------------------------------------------------
	.EXTERN		f_sub_SRU_fpu_set
	.EXTERN		f_sub_SRU_fpu_restore
	.EXTERN		f_sub_FPU_fpcc_load

	.EXTERN		FPU_cmp_tbl_1
#if CST_FPU_SUPPORT_DOUBLE
	.EXTERN		FPU_cmp_tbl_2
-- CST_FPU_SUPPORT_DOUBLE
#endif

------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_cmp_1
--  Function ID     : CST_FN_064
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R8, R10, R11, (EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_cmp_1:
	-- Covers: CST_DD_081
	-- Covers: CST_DD_311
	-- Covers: CST_DD_226
	-- Covers: CST_UM_347
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R29-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cmp_tbl_1, EP		--
	MOV		0x02, R11			--

    FPU_cmp_1_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R8			--

	--------------------------------------------------
	--	CMPF.S fcond, reg2, reg1        -> Abridged form of fcbit(CC0)
	--	CMPF.S fcond, reg2, reg1, fcbit
	--------------------------------------------------
	-- Covers: CST_UM_347_02
	CMPF.S		FC_F, R8, R6			--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	-- Covers: CST_UM_347_01
	CMPF.S		FC_UN, R8, R6, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_EQ, R8, R6, 0x2		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_UEQ, R8, R6, 0x3		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_OLT, R8, R6, 0x4		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_ULT, R8, R6, 0x5		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_OLE, R8, R6, 0x6		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_ULE, R8, R6, 0x7		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_SF, R8, R6, 0x0		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_NGLE, R8, R6, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_SEQ, R8, R6, 0x2		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_NGL, R8, R6, 0x3		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_LT, R8, R6, 0x4		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_NGE, R8, R6, 0x5		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_LE, R8, R6, 0x6		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_NGT, R8, R6, 0x7		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADD		0x08, EP			--
	LOOP		R11, FPU_cmp_1_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R8			--

	--------------------------------------------------
	--	CMPF.S fcond, reg2, reg1        -> Abridged form of fcbit(CC0)
	--	CMPF.S fcond, reg2, reg1, fcbit
	--------------------------------------------------
	CMPF.S		FC_F, R6, R8			--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_UN, R8, R6			--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_F, R6, R8, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.S		FC_UN, R8, R6, 0x2		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R29-LP}, [LP]		--


#if CST_FPU_SUPPORT_DOUBLE

------------------------------------------------------------------------------
--  Function Name   : _CST_FPU_cmp_2
--  Function ID     : CST_FN_065
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R7, R8, R9, R10, R11, (EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_FPU_cmp_2:
	-- Covers: CST_DD_AP_505
	-- Covers: CST_UM_346
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R29-LP}, 0x07, SP		--

	--------------------------------------------------
	--	Push System Registers for FPU
	--------------------------------------------------
	JARL		f_sub_SRU_fpu_set, LP		--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		FPU_cmp_tbl_2, EP		--
	MOV		0x02, R11			--

    FPU_cmp_2_001:
	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	SLD.W		0x00[EP], R6			--
	SLD.W		0x04[EP], R7			--
	SLD.W		0x08[EP], R8			--
	SLD.W		0x0C[EP], R9			--

	--------------------------------------------------
	--	CMPF.D fcond, reg2, reg1        -> Abridged form of fcbit(CC0)
	--	CMPF.D fcond, reg2, reg1, fcbit
	--------------------------------------------------
	-- Covers: CST_UM_346_02
	CMPF.D		FC_F, R8, R6			--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	-- Covers: CST_UM_346_01
	CMPF.D		FC_UN, R8, R6, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_EQ, R8, R6, 0x2		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_UEQ, R8, R6, 0x3		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_OLT, R8, R6, 0x4		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_ULT, R8, R6, 0x5		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_OLE, R8, R6, 0x6		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_ULE, R8, R6, 0x7		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_SF, R8, R6, 0x0		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_NGLE, R8, R6, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_SEQ, R8, R6, 0x2		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_NGL, R8, R6, 0x3		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_LT, R8, R6, 0x4		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_NGE, R8, R6, 0x5		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_LE, R8, R6, 0x6		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_NGT, R8, R6, 0x7		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	--------------------------------------------------
	--	Pop and Push System Register
	--	(DI pediod is Max 480 cycle)
	--------------------------------------------------
	MOV		EP, R6				--
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--
	JARL		f_sub_SRU_fpu_set, LP		--cst_point: popreg
	MOV		R6, EP				--

	--------------------------------------------------
	--	Judge of Test End
	--------------------------------------------------
	ADDI		0x0010, EP, EP			--
	LOOP		R11, FPU_cmp_2_001		--

	--------------------------------------------------
	--	Set of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R6			--
	MOV		0xA55A3CC3, R7			--
	MOV		0xA55A3CC3, R8			--
	MOV		0x5AA5C33C, R9			--

	--------------------------------------------------
	--	CMPF.D fcond, reg2, reg1        -> Abridged form of fcbit(CC0)
	--	CMPF.D fcond, reg2, reg1, fcbit
	--------------------------------------------------
	CMPF.D		FC_F, R6, R8			--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	CMPF.D		FC_UN, R8, R6, 0x1		--
	JARL		f_sub_FPU_fpcc_load, LP		--cst_point: fpcc=V

	--------------------------------------------------
	--	Pop System Registers for FPU
	--------------------------------------------------
	MOV		SP, EP				--
	JARL		f_sub_SRU_fpu_restore, LP	--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x07, {R29-LP}, [LP]		--

-- CST_FPU_SUPPORT_DOUBLE
#endif


-- ============================================================================
-- =====        E n d   o f   F i l e   :   FPU_cmp_ope.850               =====
-- ============================================================================
