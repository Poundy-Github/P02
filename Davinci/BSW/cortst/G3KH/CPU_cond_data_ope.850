---------------------------------------------------------------------------------
-- Project      = G3M/G3KH SW CST                                              --
-- Module       = CPU_cond_data_ope.850                                        --
-- Version      = 1.2.4                                                        --
-- Date         = 10-11-2017                                                   --
---------------------------------------------------------------------------------
--                                  COPYRIGHT                                  --
---------------------------------------------------------------------------------
-- Copyright (c) 2014-2017 by Renesas Electronics Corporation                  --
---------------------------------------------------------------------------------
-- Purpose:                                                                    --
--   RH850G3M/RH850G3KH CORE SELF TEST                                         --
--   Conditional data manipulation instructions                                --
---------------------------------------------------------------------------------
--                                                                             --
-- Unless otherwise agreed upon in writing between your company and            --
-- Renesas Electronics Corporation the following shall apply!                  --
--                                                                             --
-- Warranty Disclaimer                                                         --
--                                                                             --
-- There is no warranty of any kind whatsoever granted by Renesas. Any         --
-- warranty is expressly disclaimed and excluded by Renesas, either expressed  --
-- or implied, including but not limited to those for non-infringement of      --
-- intellectual property, merchantability and/or fitness for the particular    --
-- purpose.                                                                    --
--                                                                             --
-- Renesas shall not have any obligation to maintain, service or provide bug   --
-- fixes for the supplied Product(s) and/or the Application.                   --
--                                                                             --
-- Each User is solely responsible for determining the appropriateness of      --
-- using the Product(s) and assumes all risks associated with its exercise     --
-- of rights under this Agreement, including, but not limited to the risks     --
-- and costs of program errors, compliance with applicable laws, damage to     --
-- or loss of data, programs or equipment, and unavailability or               --
-- interruption of operations.                                                 --
--                                                                             --
-- Limitation of Liability                                                     --
--                                                                             --
-- In no event shall Renesas be liable to the User for any incidental,         --
-- consequential, indirect, or punitive damage (including but not limited      --
-- to lost profits) regardless of whether such liability is based on breach    --
-- of contract, tort, strict liability, breach of warranties, failure of       --
-- essential purpose or otherwise and even if advised of the possibility of    --
-- such damages. Renesas shall not be liable for any services or products      --
-- provided by third party vendors, developers or consultants identified or    --
-- referred to the User by Renesas in connection with the Product(s) and/or    --
-- the Application.                                                            --
--                                                                             --
---------------------------------------------------------------------------------
-- Environment:                                                                --
--              Devices:  G3M/G3KH                                             --
--              Language: Green Hills Software, Compiler v2015.1.7             --
---------------------------------------------------------------------------------

#include        "CST_common.inc"
#include        "CST_if.h"

------------------------------------------------------------------------------
--	Defined Symbol
------------------------------------------------------------------------------
	.GLOBL		_CST_CPU_cond_data_1
	.GLOBL		_CST_CPU_cond_data_2
	.GLOBL		_CST_CPU_cond_data_3

------------------------------------------------------------------------------
--	External Reference
------------------------------------------------------------------------------
	.EXTERN		f_sub_CST_psw_clear

------------------------------------------------------------------------------
--  Function Name   : _CST_CPU_cond_data_1
--  Function ID     : CST_FN_012
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R6, R7, R8, R9, R10, R11, R12, R13, R14, (R25, R26, EP, LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_CPU_cond_data_1:
	-- Covers: CST_DD_030
	-- Covers: CST_DD_175
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{R25-LP}, 0x00			--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		-0x01, EP			--
	JARL		f_sub_CST_psw_clear, LP		--

	-- Covers: CST_UM_234
	-- Covers: CST_UM_234_01
	--------------------------------------------------
	--	CMOV CCcc, reg1, reg2, reg3
	--------------------------------------------------
	--	PSW  BIT  4    3    2    1    0
	--	          SAT  CY   OV   S    Z

	--	CCcc : CC_V	OV=1
	CMOV		CC_V, R0, EP, R11		--cst_point: out=1,0x5a5a
	ADD		R11, R10			--

	--	CCcc : CC_NV	OV=0
	CMOV		CC_NV, R0, EP, R12		--cst_point: out=1,0x5a5a
	ADD		R12, R10			--

	--	CCcc : CC_CL	CY=1
	CMOV		CC_CL, EP, R0, R13		--cst_point: out=1,0x5a5a
	ADD		R13, R10					--cst_point: flag=CY

	--	CCcc : CC_NCNL	CY=0
	CMOV		CC_NCNL, EP, R0, R14		--cst_point: out=1,0x5a5a
	ADD		R14, R10			--

	-- Covers: CST_UM_234
	-- Covers: CST_UM_234_02
	--------------------------------------------------
	--	CMOV CCcc, imm5, reg2, reg3
	--------------------------------------------------
	--	PSW  BIT  4    3    2    1    0
	--	          SAT  CY   OV   S    Z

	--	CCcc : CC_Z	Z=1
	CMOV		CC_Z, 0x00, EP, R6		--cst_point: out=1,0x5a5a
	ADD		R6, R10				--

	--	CCcc : CC_NZ	Z=0
	CMOV		CC_NZ, 0x00, EP, R7		--cst_point: out=1,0x5a5a
	ADD		R7, R10				--

	--	CCcc : CC_NH	(CY OR Z)=1
	CMOV		CC_NH, -0x01, R0, R8		--cst_point: out=1,0x5a5a
	ADD		R8, R10							--cst_point: flag=Z

	--	CCcc : CC_H	(CY OR Z)=0
	CMOV		CC_H, -0x01, R0, R9		--cst_point: out=1,0x5a5a
	ADD		R9, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		0x5AA5C33C, R25			--
	NOT		R25, R26			--

	--------------------------------------------------
	--	CMOV CCcc, reg1, reg2, reg3
	--------------------------------------------------
	--	CCcc : CC_V	OV=1
	MOV		0x55555555, R12			--
	CMOV		CC_V, R12, R25, R11		--cst_point: out=1
	ADD		R11, R10			--

	--	CCcc : CC_NV	OV=0
	MOV		0xAAAAAAAA, R12			--
	CMOV		CC_NV, R12, R26, R11		--cst_point: out=1
	ADD		R11, R10			--

	--------------------------------------------------
	--	CMOV CCcc, imm5, reg2, reg3
	--------------------------------------------------
	--	CCcc : CC_Z	Z=1
	CMOV		CC_Z, 0x05, R25, R6		--cst_point: out=1
	ADD		R6, R10				--

	--	CCcc : CC_NZ	Z=0
	CMOV		CC_NZ, 0x0A, R26, R6		--cst_point: out=1
	ADD		R6, R10				--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x00, {R25-LP}, [LP]		--


------------------------------------------------------------------------------
--  Function Name   : _CST_CPU_cond_data_2
--  Function ID     : CST_FN_013
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R10, R14, (LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_CPU_cond_data_2:
	-- Covers: CST_DD_031
	-- Covers: CST_DD_176
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{LP}, 0x00			--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		R0, R14				--
	JARL		f_sub_CST_psw_clear, LP		--

	-- Covers: CST_UM_284
	-- Covers: CST_UM_284_01
	--------------------------------------------------
	--	SASF CCcc, reg2
	--------------------------------------------------
	--	PSW  BIT  4    3    2    1    0
	--	          SAT  CY   OV   S    Z

	--	CCcc:CC_SN	S=1
	SASF		CC_SN, R14			--cst_point: out=1
	ADD		R14, R10			--

	--	CCcc:CC_NSP	S=0
	SASF		CC_NSP, R14			--cst_point: out=1
	ADD		R14, R10			--

	--	CCcc:CC_T	ALWAYS
	SASF		CC_T, R14			--cst_point: out=1
	ADD		R14, R10			--

	--	CCcc:CC_SA	SAT=1
	SASF		CC_SA, R14			--cst_point: out=1
	ADD		R14, R10			--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x00, {LP}, [LP]		--



------------------------------------------------------------------------------
--  Function Name   : _CST_CPU_cond_data_3
--  Function ID     : CST_FN_014
--  Input           : none
--  Output          : R10 : Result SUM
--  Broken Register : R10, R12, R13, R14, (LP)
------------------------------------------------------------------------------
	.SECTION	".text", .text
	.ALIGN		4

_CST_CPU_cond_data_3:
	-- Covers: CST_DD_032
	-- Covers: CST_DD_177
	--------------------------------------------------
	--	Push General Registers
	--------------------------------------------------
	PREPARE		{LP}, 0x00			--

	--------------------------------------------------
	--	Start of Test
	--------------------------------------------------
	MOV		R0, R10				--

	--------------------------------------------------
	--	Initialized of Test Pattern Data
	--------------------------------------------------
	MOV		-0x01, R14			--
	JARL		f_sub_CST_psw_clear, LP		--

	-- Covers: CST_UM_295
	-- Covers: CST_UM_295_01
	--------------------------------------------------
	--	SETF CCcc, reg2
	--------------------------------------------------
	--	PSW  BIT  3    2    1    0
	--	          CY   OV   S    Z

	MOV		R14, R13			--

	--	CCcc : CC_LT	(S XOR OV)=1
	SETF		CC_LT, R13			--cst_point: out=1
	ADD		R13, R10			--

	--	CCcc : CC_GE	(S XOR OV)=0
	SETF		CC_GE, R13			--cst_point: out=1
	ADD		R13, R10			--

	MOV		R14, R12			--

	--	CCcc : CC_LE	((S XOR OV) OR Z)=1
	SETF		CC_LE, R12			--cst_point: out=1
	ADD		R12, R10			--

	--	CCcc : CC_GT	((S XOR OV) OR Z)=0
	SETF		CC_GT, R12			--cst_point: out=1
	ADD		R12, R10			--

	--------------------------------------------------
	--	Pop General Registers
	--------------------------------------------------
	DISPOSE		0x00, {LP}, [LP]		--


-- ============================================================================
-- =====        E n d   o f   F i l e   :   CPU_cond_data_ope.850         =====
-- ============================================================================
